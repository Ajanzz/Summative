class FreeType:
    private wordCounter = 0
    private first = 1
    private totalTime
    private timer

    private countAll = 0
    private counter = 0
    private elapsedTime = 0

    private saveData
    private executor

    private secondsLabel
    private wpmLabel
    private accuracyLabel
    private programWordLabel
    private secondProgramWordLabel
    private userWord
    private playAgainButton
    private words

    constructor(duration):
        totalTime = duration
        timer = totalTime
        start()
        addToList()
        initialize()

    method start():
        frameWidth = 1200
        frameHeight = 800

        setSize(frameWidth, frameHeight)
        panel = new Panel()
        panel.setOpaque(false)
        panel.setLayout(null)

        setOpaque(false)
        setLayout(new BorderLayout())
        add(panel, BorderLayout.CENTER)

        // Initialize and set properties for UI elements

    method addToList():
        try:
            reader = new BufferedReader(new FileReader("C:\\Users\\namnam\\Desktop\\Summative\\src\\java\\main\\wordsList.txt"))
            line = reader.readLine()
            while (line != null):
                words.add(line)
                line = reader.readLine()
            reader.close()
        catch (IOException e):
            e.printStackTrace()

    method initialize():
        playAgainButton.setVisible(false)
        playAgainButton.setEnabled(false)
        addToList()
        Collections.shuffle(words)
        programWordLabel.setText(words.get(wordCounter))
        secondProgramWordLabel.setText(words.get(wordCounter + 1))
        wordCounter++

        // Create a file to save data

    Runnable r:
        if (timer > -1):
            secondsLabel.setText(String.valueOf(timer))
            timer -= 1
        else:
            if (timer == -1):
                userWord.setEnabled(false)
                userWord.setText("Game over")

                // Write data to the saveData file

            if (timer == -4):
                playAgainButton.setVisible(true)
                playAgainButton.setEnabled(true)
                executor.shutdown()

            timer -= 1

    method startGame(ke):
        if (first == 1):
            first = 0
            executor.scheduleAtFixedRate(r, 0, 1, TimeUnit.SECONDS)

        if (ke.getKeyCode() == KeyEvent.VK_SPACE):
            s = userWord.getText()
            real = programWordLabel.getText()
            countAll++

            if (s.equals(real)):
                counter++
                wpmLabel.setText(String.valueOf(counter))

            userWord.setText("")
            accuracyLabel.setText(String.valueOf(Math.round((counter * 1.0 / countAll) * 100)))
            programWordLabel.setText(words.get(wordCounter))
            secondProgramWordLabel.setText(words.get(wordCounter + 1))
            wordCounter++

    method actionPerformed(e):
        if (e.getSource() == playAgainButton):
            // Perform play again logic

        action = e.getActionCommand()
        print("action:" + action)

    method keyPressed(ke):
        keyCode = ke.getKeyCode()

        if (keyCode == KeyEvent.VK_SPACE || keyCode == KeyEvent.VK_ENTER):
            userType = userWord.getText().trim()
            real = programWordLabel.getText()
            countAll++

            if (userType.equals(real)):
                counter++

            wpmLabel.setText(String.valueOf((counter * 60) / elapsedTime))
            userWord.setText("")
            accuracyLabel.setText(String.valueOf(Math.round((counter * 1.0 / countAll) * 100)) + "%")
            programWordLabel.setText(words.get(wordCounter))
            secondProgramWordLabel.setText(words.get(wordCounter + 1))
            wordCounter++



