class FreeType extends JPanel implements ActionListener, KeyListener {

    private int wordCounter
    private int first
    private int timer

    private File saveData

    ScheduledExecutorService executor

    private JLabel secondsLabel
    private JLabel wpmLabel
    private JLabel accuracyLabel
    private JLabel programWordLabel
    private JLabel secondProgramWordLabel

    private JTextField userWord

    private JButton playAgainButton

    ArrayList<String> words

    int frameWidth
    int frameHeight

    constructor FreeType(duration):
        timer = duration
        start()
        addToList()
        initialize()

    method start():
        frameWidth = 1200
        frameHeight = 800

        setSize(frameWidth, frameHeight)
        panel = new JPanel()
        panel.setOpaque(false)
        panel.setLayout(null)

        setOpaque(false)
        setLayout(new BorderLayout())
        add(panel, BorderLayout.CENTER)

        // Create and configure labels, text fields, and buttons

        panel.add(secondsLabel)
        panel.add(wpmLabel)
        panel.add(accuracyLabel)
        panel.add(programWordLabel)
        panel.add(secondProgramWordLabel)
        panel.add(userWord)
        panel.add(playAgainButton)

    method addToList():
        // Read words from a file and add them to the 'words' ArrayList

    method initialize():
        playAgainButton.setVisible(false)
        playAgainButton.setEnabled(false)
        addToList()
        Collections.shuffle(words)
        programWordLabel.setText(words.get(wordCounter))
        secondProgramWordLabel.setText(words.get(wordCounter + 1))
        wordCounter++

        // Create a file for saving data

    Runnable r:
        if timer > -1:
            secondsLabel.setText(String.valueOf(timer))
            timer -= 1
        else:
            if timer == -1:
                userWord.setEnabled(false)
                userWord.setText("Game over")

                // Save data to the file

            if timer == -4:
                playAgainButton.setVisible(true)
                playAgainButton.setEnabled(true)
                executor.shutdown()

            timer -= 1

    method startGame(ke):
        if first == 1:
            first = 0
            executor.scheduleAtFixedRate(r, 0, 1, TimeUnit.SECONDS)

        if ke.getKeyCode() == KeyEvent.VK_SPACE:
            s = userWord.getText()
            real = programWordLabel.getText()
            countAll++

            if s.equals(real):
                counter++
                wpmLabel.setText(String.valueOf(counter))

            userWord.setText("")
            accuracyLabel.setText(String.valueOf(Math.round((counter * 1.0 / countAll) * 100)))
            programWordLabel.setText(words.get(wordCounter))
            secondProgramWordLabel.setText(words.get(wordCounter + 1))
            wordCounter++

    // Implement the ActionListener interface methods
    // actionPerformed(ActionEvent e)

    // Implement the KeyListener interface methods
    // keyTyped(KeyEvent ke)
    // keyPressed(KeyEvent ke)
    // keyReleased(KeyEvent ke)

}

