class KeystrokeVisualizer extends JFrame:
    JLabel label
    JButton[] keyboardButtons

    KeystrokeVisualizer():
        super("Keystroke Visualizer")
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE)
        setSize(800, 400)
        setLocationRelativeTo(null)

        label = JLabel("Press any key...")
        label.setFont("Arial", Font.BOLD, 24)
        label.setHorizontalAlignment(JLabel.CENTER)
        getContentPane().add(label, BorderLayout.NORTH)

        JPanel keyboardPanel = JPanel(new GridLayout(4, 14, 5, 5))
        keyboardButtons = new JButton[47]

        String[] qwertyKeys = ["`", "1", "2", "3", "4", "5", "6", "7", "8", "9", "0", "-", "=",
                               "Q", "W", "E", "R", "T", "Y", "U", "I", "O", "P", "[", "]", "\\",
                               "A", "S", "D", "F", "G", "H", "J", "K", "L", ";", "'",
                               "Z", "X", "C", "V", "B", "N", "M", ",", ".", "/"]

        for i from 0 to 46:
            keyboardButtons[i] = JButton(qwertyKeys[i])
            keyboardButtons[i].addActionListener(this)
            keyboardButtons[i].setFont("Arial", Font.BOLD, 18)
            keyboardButtons[i].setFocusable(false)
            keyboardButtons[i].setBackground(Color(229, 229, 229))
            keyboardButtons[i].setBorder(BorderFactory.createEmptyBorder(10, 10, 10, 10))
            keyboardButtons[i].setFocusPainted(false)
            keyboardButtons[i].setPreferredSize(Dimension(50, 50))
            keyboardButtons[i].setForeground(Color.BLACK)
            keyboardPanel.add(keyboardButtons[i])

        getContentPane().add(keyboardPanel, BorderLayout.CENTER)

        addKeyListener(this)
        setFocusable(true)

    main(args):
        SwingUtilities.invokeLater():
            KeystrokeVisualizer visualizer = KeystrokeVisualizer()
            visualizer.setVisible(true)

    keyPressed(e):
        keyCode = e.getKeyCode()
        keyText = KeyEvent.getKeyText(keyCode)
        label.setText("Pressed: " + keyText)

        highlightButton(keyText, true)

    keyReleased(e):
        keyCode = e.getKeyCode()
        keyText = KeyEvent.getKeyText(keyCode)
        label.setText("Released: " + keyText)

        highlightButton(keyText, false)

    keyTyped(e):
        // Ignored for this example

    actionPerformed(e):
        keyText = ((JButton) e.getSource()).getText()
        label.setText("Pressed: " + keyText)

        simulateKeyPress(keyText)

    highlightButton(keyText, highlight):
        for button in keyboardButtons:
            if button.getText() equals keyText:
                button.setBackground(highlight ? Color.YELLOW : Color(229, 229, 229))
                break

    simulateKeyPress(keyText):
        for button in keyboardButtons:
            if button.getText() equals keyText:
                button.doClick()
                break
